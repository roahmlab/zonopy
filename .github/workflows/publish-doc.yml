# action.yml
name: 'Build Docs'

on:
  push:
    branches:
      - main
      - develop

jobs:
  build_docs:
    runs-on: ubuntu-latest
    name: 'Build Sphinx documentation'
    steps:
      - name: 'Checkout the repo'
        uses: actions/checkout@v4

      - name: 'Run the buildscript'
        # Workaround to keep tty working
        # https://github.com/gfx/example-github-actions-with-tty
        shell: 'script -q -e -c "bash {0}"'
        run: ./docs/build-docs.sh html
      
      # Cache the build so we can deploy it
      - name: 'cache built docs'
        id: cache-build
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}/docs/build/html
          key: ${{ github.sha }}-docs

  deploy_main_docs:
    permissions:
      contents: write
      pages: write
    runs-on: ubuntu-latest
    name: 'Publish latest docs to github pages'
    needs: build_docs
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 'Restore built docs cache'
        uses: actions/cache/restore@v3
        id: restore-build
        with:
          path: ${{ github.workspace }}/docs/build/html
          key: ${{ github.sha }}-docs
      
      - name: 'Deploy to gh-pages'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
          publish_branch: gh-pages
          keep_files: true

  deploy_develop_docs:
    permissions:
      contents: write
      pages: write
    runs-on: ubuntu-latest
    name: 'Publish development documentation to github pages'
    needs: build_docs
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: 'Restore built docs cache'
        uses: actions/cache/restore@v3
        id: restore-build
        with:
          path: ${{ github.workspace }}/docs/build/html
          key: ${{ github.sha }}-docs

      - name: 'Deploy to gh-pages'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
          publish_branch: gh-pages
          destination_dir: develop

  # Probably not necesary with cache
  # cleanup:
  #   runs-on: ubuntu-latest
  #   needs: ['build_docs', 'deploy_main_docs', 'deploy_develop_docs']
  #   name: 'cache cleanup'
  #   if: always() && needs.build_docs.result == 'success'
  #   # Fun trick to say we need the above to all finish but only care about the first success
  #   steps:
  #     - uses: adapttive/cache-delete-action@v1.1
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         cache-key: ${{ github.sha }}-docs

# TODO Versioned docs (look into the release event)
